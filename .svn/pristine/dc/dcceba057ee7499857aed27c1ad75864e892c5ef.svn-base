package com.yzf.Cpaypos.ui.activitys;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v7.widget.Toolbar;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;

import com.afollestad.materialdialogs.DialogAction;
import com.afollestad.materialdialogs.MaterialDialog;
import com.yzf.Cpaypos.R;
import com.yzf.Cpaypos.adapter.BankCardAdapter;
import com.yzf.Cpaypos.kit.AppUser;
import com.yzf.Cpaypos.model.ChooseItem;
import com.yzf.Cpaypos.model.servicesmodels.GetWhiteCardListResult;
import com.yzf.Cpaypos.present.PBankCard;
import com.yzf.Cpaypos.widget.BottomDialog;
import com.yzf.Cpaypos.widget.StateView;

import java.util.ArrayList;

import butterknife.BindView;
import cn.droidlover.xdroidmvp.mvp.XActivity;
import cn.droidlover.xdroidmvp.net.NetError;
import cn.droidlover.xdroidmvp.router.Router;
import cn.droidlover.xrecyclerview.RecyclerItemCallback;
import cn.droidlover.xrecyclerview.XRecyclerContentLayout;

/**
 * 　　┏┓　　　┏┓+ +
 * 　┏┛┻━━━┛┻┓ + +
 * 　┃　　　　　　　┃
 * 　┃　　　━　　　┃ ++ + + +
 * ████━████ ┃+
 * 　┃　　　　　　　┃ +
 * 　┃　　　┻　　　┃
 * 　┃　　　　　　　┃ + +
 * 　┗━┓　　　┏━┛
 * 　　　┃　　　┃
 * 　　　┃　　　┃ + + + +
 * 　　　┃　　　┃
 * 　　　┃　　　┃ +  神兽镇楼
 * 　　　┃　　　┃    代码无bug
 * 　　　┃　　　┃　　+
 * 　　　┃　 　　┗━━━┓ + +
 * 　　　┃ 　　　　　　　┣┓
 * 　　　┃ 　　　　　　　┏┛
 * 　　　┗┓┓┏━┳┓┏┛ + + + +
 * 　　　　┃┫┫　┃┫┫
 * 　　　　┗┻┛　┗┻┛+ + + +
 * <p>
 * ClassName：BankCardActivity
 * Description: 银行卡管理界面
 * Author：JensenWei
 * QQ: 2188307188
 * Createtime：2017/4/1 11:49
 * Modified By：
 * Fixtime：2017/4/1 11:49
 * FixDescription：
 */

public class BankCardActivity extends XActivity<PBankCard> {
    @BindView(R.id.title)
    TextView title;
    @BindView(R.id.toolbar)
    Toolbar toolbar;
    @BindView(R.id.bankcard_contentLayout)
    XRecyclerContentLayout contentLayout;
    StateView errorView;
    private BankCardAdapter adapter;
    private int delposition = 0;


    @Override
    public void initData(Bundle savedInstanceState) {
        initView();
        initAdapter();
//        contentLayout.showLoading();
    }

    @Override
    public void onResume() {
        super.onResume();
//        getP().getWhiteCardList(AppUser.getInstance().getUserId());
    }

    @Override
    public int getLayoutId() {
        return R.layout.activity_bank_card;
    }

    @Override
    public int getOptionsMenuId() {
        return R.menu.menu_bankcard;
    }

    @Override
    public PBankCard newP() {
        return new PBankCard();
    }

    public void initAdapter() {
        if (adapter == null) {
            adapter = new BankCardAdapter(context);
            adapter.setOnMyItemClickListener(new BankCardAdapter.OnMyItemClickListener() {
                @Override
                public void myClick(View v, int pos, GetWhiteCardListResult.DataBean item) {
                    Router.newIntent(context)
                            .to(CreditWithDrawActivity.class)
                            .putSerializable("dataBean", item)
                            .launch();
                }

                @Override
                public void mLongClick(View v, final int pos, final GetWhiteCardListResult.DataBean item) {
                    BottomDialog bottomDailog = new BottomDialog(context);
                    ArrayList<ChooseItem> imgArray = new ArrayList<>();
                    imgArray.add(new ChooseItem("删除银行卡", null));
                    imgArray.add(new ChooseItem("修改银行卡", null));
                    bottomDailog.showAlert(null, imgArray, new BottomDialog.OnAlertSelectId() {
                        @Override
                        public void onClick(int whichButton) {
                            if (whichButton == 0) {
                                showNoticeDialog("是否删除该银行卡", new MaterialDialog.SingleButtonCallback() {
                                    @Override
                                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {
                                        if (which == DialogAction.POSITIVE) {
                                            getvDelegate().showLoading();
                                            delposition = pos;
                                            getP().deleteBankCard(AppUser.getInstance().getUserId(), item.getAcctNo());
                                        }
                                    }
                                });
                            } else if (whichButton == 1) {
                                Router.newIntent(context)
                                        .to(ModifiedCreditCardctivity.class)
                                        .putSerializable("dataBean", item)
                                        .launch();
                            }
                        }
                    });
                }
            });
        }
        contentLayout.getSwipeRefreshLayout().setColorSchemeColors(getResources().getColor(R.color.theme));
        contentLayout.getRecyclerView().verticalLayoutManager(this);
        contentLayout.getRecyclerView().setAdapter(adapter);
        if (errorView == null) {
            errorView = new StateView(context);
        }
        contentLayout.errorView(errorView);
        contentLayout.getRecyclerView().setRefreshEnabled(false);
        contentLayout.loadingView(View.inflate(context, R.layout.view_loading, null));
        contentLayout.emptyView(View.inflate(context, R.layout.view_empty, null));

        adapter.setData(AppUser.getInstance().getcList());
        if (adapter.getItemCount() < 1) {
            contentLayout.showEmpty();
            return;
        }
    }

    /**
     * 初始化界面
     */
    private void initView() {
        initToolbar();
    }

    /**
     * 初始化Toolbar
     */
    private void initToolbar() {
        setSupportActionBar(toolbar);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        getSupportActionBar().setHomeButtonEnabled(true);
        getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_arrow_white_24dp);
        getSupportActionBar().setDisplayShowTitleEnabled(false);
        title.setText("信用卡取款");
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }

    /**
     * 标题栏监听
     *
     * @param item
     * @return
     */
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.home:
                finish();
                break;
            case R.id.menu_bankcard:
                JumpActivity(CgiBindCardActivity.class, false);
                break;
        }
        return super.onOptionsItemSelected(item);
    }

    /**
     * 解绑卡后刷新卡列表
     *
     * @param msg
     */
    public void refresh(String msg) {
        getvDelegate().toastShort(msg);
        adapter.removeElement(delposition);
    }

    /**
     * activity跳转
     */
    public void JumpActivity(Class<?> activity, boolean isfinish) {
        getvDelegate().dismissLoading();
        Router.newIntent(context)
                .to(activity)
                .launch();
        if (isfinish) {
            Router.pop(context);
        }
    }

    /**
     * 显示双按钮对话框
     *
     * @param msg
     * @param callback
     */
    public void showNoticeDialog(String msg, MaterialDialog.SingleButtonCallback callback) {
        getvDelegate().showNoticeDialog(msg, callback);
    }

    /**
     * 显示Toast
     *
     * @param msg
     */
    public void showToast(String msg) {
        getvDelegate().toastShort(msg);
    }

    /**
     * 显示单按钮对话框
     *
     * @param msg
     */
    public void showErrorDialog(String msg) {
        getvDelegate().showErrorDialog(msg);
    }

    /**
     * 显示错误信息
     *
     * @param error
     */
    public void showError(NetError error) {
        getvDelegate().showError(error);
    }

    public void showErrorView(String msg, int id) {
        errorView.setMsg(msg);
        errorView.setImg(id);
        contentLayout.showError();
    }

    public void showErrorView(NetError error, int id) {
        errorView.setMsg(getvDelegate().getErrorType(error));
        errorView.setImg(id);
        contentLayout.showError();
    }

    public void setAdapter(GetWhiteCardListResult getWhiteCardListResult) {
        adapter.setData(getWhiteCardListResult.getData());
        if (adapter.getItemCount() < 1) {
            contentLayout.showEmpty();
            return;
        }
    }

}
